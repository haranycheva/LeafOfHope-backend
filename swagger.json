{
  "openapi": "3.0.0",
  "info": {
    "title": "Leaf Of Hope",
    "version": "0.3",
    "description": "The Leaf Of Hope database manages user profiles, plant details, and listings to facilitate plant search and exchange.",
    "contact": {
      "name": "",
      "email": "",
      "url": ""
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://leafofhope-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Advert",
      "description": "Advert endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password invalid!",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized/User not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/getInfo": {
      "get": {
        "tags": ["User"],
        "summary": "User get all info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "getInfo's object",
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized/User not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/": {
      "put": {
        "tags": ["User"],
        "summary": "User change info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "changeInfo's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "400": {
            "description": "Password or email can't be changed",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/advert/": {
      "get": {
        "tags": ["Advert"],
        "summary": "Get filtered adverts",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["new", "old", "start-alphabet", "end-alphabet"]
            },
            "description": "Sorting options: newest, oldest, alphabetically ascending or descending"
          },
          {
            "name": "light",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["light-loving", "relatively light-loving", "shade-tolerant"]
            },
            "description": "How many light the plant is needed"
          },
          {
            "name": "temperature",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["heat-loving", "cold-resisted"]
            },
            "description": "Temperature preferences: heat-loving or cold-resisted"
          },
          {
            "name": "care",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["picky", "unassuming"]
            },
            "description": "Plant care"
          },
          {
            "name": "lifeDuration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["short-lived", "long-lived"]
            },
            "description": "Life duration: short-lived or long-lived"
          },
          {
            "name": "allergenicity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["available", "absent"]
            },
            "description": "Allergenicity: availableabsent "
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["dwarf", "low", "average", "high", "very high"]
            },
            "description": "Height of the plant"
          },
          {
            "name": "watering",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["three days", "week", "two weeks", "month"]
            },
            "description": "How often plant needs to be watered"
          },
          {
            "name": "toxicity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["very-poisonous", "highly-toxic", "toxic", "non-toxic"]
            },
            "description": "Toxocity: very-poisonous, highly-toxic, toxic, non-toxic"
          },
          {
            "name": "growthRate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["fast-growing", "medium-growing", "slow-growing"]
            },
            "description": "How fast the plant grows"
          },
          {
            "name": "windowDistance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["up to 0.5m", "up to 1m", "up to 2m", "over 2m"]
            },
            "description": "How far it needs to be from window"
          },
          {
            "name": "substrate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["universal", "peat", "cactus", "orchids", "palm", "other"]
            },
            "description": "What substrate you have to use for this plant"
          },
          {
            "name": "plantType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["flowering", "follage"]
            },
            "description": "Type of the plant"
          },
          {
            "name": "plantCondition",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["conditioned", "unconditioned"]
            },
            "description": "Plant condition"
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered adverts successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredAdvertsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid query parameters)",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Advert"],
        "summary": "Add advert",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Advert's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddAdvertRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdvertResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Creating failed",
            "content": {}
          }
        }
      }
    },
    "/api/advert/{advertId}": {
      "put": {
        "tags": ["Advert"],
        "summary": "Edit advert",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "advertId",
            "required": true,
            "type": "string",
            "description": "Advert's id"
          }
        ],
        "requestBody": {
          "description": "Advert's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EditAdvertRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdvertResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Advert with id = :advertIdis not found"
          }
        }
      },
      "delete": {
        "tags": ["Advert"],
        "summary": "Advert delete",
        "parameters": [
          {
            "in": "path",
            "name": "advertId",
            "required": true,
            "type": "string",
            "description": "Advert's id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAdvertResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized/User not found",
            "content": {}
          },
          "404": {
            "description": "Advert with id = :advertId is not found"
          }
        }
      },
      "get": {
        "tags": ["Advert"],
        "summary": "Get advert by id",
        "parameters": [
          {
            "in": "path",
            "name": "advertId",
            "required": true,
            "type": "string",
            "description": "Advert's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdvertResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized/User not found",
            "content": {}
          },
          "404": {
            "description": "Advert with id = :advertId is not found"
          }
        }
      }
    },
    "api/advert/userAdverts": {
      "get": {
        "tags": ["Advert"],
        "summary": "Get user`s adverts",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Weather advert is active"
          }
        ],
        "responses": {
          "200": {
            "description": "Adverts successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredAdvertsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "username", "phone", "adress"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "Baby Shark"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380123456789"
          },
          "adress": {
            "type": "string",
            "description": "User's adress",
            "example": "Kyiv, Ukraine"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3MWNmZTZjYzk2MzlhYzNmODEyMGY0YiIsImlhdCI6MTcyOTk1MzM4OSwiZXhwIjoxNzMwMDM2MTg5fQ.nBL9aA-aU_Necx6BHXNfk-ORsEAlU4L99H5CZyxjqvo"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's ID",
                "example": "671cfe6cc9639ac3f8120f4b"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "user@gmail.com",
                "format": "email"
              },
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "user"
              },
              "adress": {
                "type": "string",
                "description": "User's address",
                "example": "Kyiv, Ukraine;"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "+380123456789"
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "small-250px": {
                    "type": "string",
                    "description": "User's small avatar (250x250px)",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/c_scale,h_250,w_250/v1729953390/leafofhope/whfr9rq5dvphgvzdl2kq.jpg"
                  },
                  "medium-300px": {
                    "type": "string",
                    "description": "User's medium avatar (300x300px)",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/c_scale,h_300,w_300/v1729953390/leafofhope/whfr9rq5dvphgvzdl2kq.jpg"
                  },
                  "large-500px": {
                    "type": "string",
                    "description": "User's large avatar (500x500px)",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/c_scale,h_500,w_500/v1729953390/leafofhope/whfr9rq5dvphgvzdl2kq.jpg"
                  }
                }
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User's logout",
            "example": "Logout success!"
          }
        }
      },
      "GetInfoResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's ID",
            "example": "671cfe6cc9639ac3f8120f4b"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "user@gmail.com",
            "format": "email"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "user"
          },
          "adress": {
            "type": "string",
            "description": "User's address",
            "example": "Kyiv, Ukraine;"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380123456789"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "small-250px": {
                "type": "string",
                "description": "User's small avatar (250x250px)",
                "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/c_scale,h_250,w_250/v1729953390/leafofhope/whfr9rq5dvphgvzdl2kq.jpg"
              },
              "medium-300px": {
                "type": "string",
                "description": "User's medium avatar (300x300px)",
                "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/c_scale,h_300,w_300/v1729953390/leafofhope/whfr9rq5dvphgvzdl2kq.jpg"
              },
              "large-500px": {
                "type": "string",
                "description": "User's large avatar (500x500px)",
                "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/c_scale,h_500,w_500/v1729953390/leafofhope/whfr9rq5dvphgvzdl2kq.jpg"
              }
            }
          }
        }
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "Baby Shark"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380123456789"
          },
          "adress": {
            "type": "string",
            "description": "User's adress",
            "example": "Kyiv, Ukraine"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar"
          }
        }
      },
      "AddAdvertRequest": {
        "type": "object",
        "required": [
          "name",
          "way",
          "lang",
          "light",
          "lifeDuration",
          "temperature",
          "height",
          "toxicity",
          "plantType",
          "plantCondition"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Advert name",
            "minLength": 1,
            "maxLength": 28,
            "example": "Beautiful Monstera"
          },
          "description": {
            "type": "string",
            "description": "Advert description",
            "maxLength": 1000,
            "example": "Looking for a good home for this plant"
          },
          "way": {
            "type": "string",
            "enum": ["exchange", "give"],
            "description": "Way of giving the plant",
            "example": "exchange"
          },
          "lang": {
            "type": "string",
            "enum": ["en", "ua"],
            "description": "The default language of plant characteristics",
            "example": "ua"
          },
          "wish": {
            "type": "string",
            "description": "Wish or expected exchange item",
            "maxLength": 200,
            "example": "Peace lily"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Picture of the plant"
          },
          "light": {
            "type": "string",
            "enum": [
              "light-loving",
              "relatively light-loving",
              "shade-tolerant"
            ],
            "description": "Light requirements",
            "example": "light-loving"
          },
          "care": {
            "type": "string",
            "enum": ["picky", "unassuming"],
            "description": "Level of care needed",
            "example": "unassuming"
          },
          "lifeDuration": {
            "type": "string",
            "enum": ["short-lived", "long-lived"],
            "description": "Plant's life duration",
            "example": "long-lived"
          },
          "temperature": {
            "type": "string",
            "enum": ["heat-loving", "cold-resisted"],
            "description": "Preferred temperature",
            "example": "heat-loving"
          },
          "height": {
            "type": "string",
            "enum": ["dwarf", "low", "average", "high", "very high"],
            "description": "Size of the plant",
            "example": "average"
          },
          "allergenicity": {
            "type": "string",
            "enum": ["available", "absent"],
            "description": "Whether the plant is allergenic",
            "example": "absent"
          },
          "watering": {
            "type": "string",
            "enum": [
              "three days",
              "week",
              "two weeks",
              "month"
            ],
            "description": "Watering frequency",
            "example": "week"
          },
          "toxicity": {
            "type": "string",
            "enum": ["very-poisonous", "highly-toxic", "toxic", "non-toxic"],
            "description": "Whether the plant is toxic",
            "example": "non-toxic"
          },
          "growthRate": {
            "type": "string",
            "enum": ["fast-growing", "medium-growing", "slow-growing"],
            "description": "Growth rate of the plant",
            "example": "medium-growing"
          },
          "windowDistance": {
            "type": "string",
            "enum": ["up to 0.5m", "up to 1m", "up to 2m", "over 2m"],
            "description": "Recommended distance from a window",
            "example": "up to 1m"
          },
          "substrate": {
            "type": "string",
            "enum": ["universal", "peat", "cactus", "orchids", "palm", "other"],
            "description": "Preferred substrate for the plant",
            "example": "universal"
          },
          "plantType": {
            "type": "string",
            "enum": ["flowering", "follage"],
            "description": "Type of plant",
            "example": "flowering"
          },
          "plantCondition": {
            "type": "string",
            "enum": ["conditioned", "unconditioned"],
            "description": "Condition of the plant",
            "example": "conditioned"
          }
        }
      },
      "AddAdvertResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the advert",
            "example": "64b7c7f9a19f4b2c5d8c1a9d"
          },
          "name": {
            "type": "string",
            "description": "Name of the advert",
            "example": "Beautiful Monstera"
          },
          "description": {
            "type": "string",
            "description": "Description of the advert",
            "example": "I hope you will like it"
          },
          "way": {
            "type": "string",
            "enum": ["exchange", "give"],
            "description": "Way of giving the plant",
            "example": "exchange"
          },
          "lang": {
            "type": "string",
            "enum": ["en", "ua"],
            "description": "The default languege of plant characterictics",
            "example": "ua"
          },
          "translated": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "transEng": {
                    "type": "string",
                    "description": "Name that is translated to English",
                    "example": "Beautiful Monstera"
                  },
                  "transUa": {
                    "type": "string",
                    "description": "Name that is translated to Ukarainian",
                    "example": "Прекрасна Монстера"
                  }
                }
              },
              "description": {
                "type": "object",
                "properties": {
                  "transEng": {
                    "type": "string",
                    "description": "Description that is translated to English",
                    "example": "I hope you will like it"
                  },
                  "transUa": {
                    "type": "string",
                    "description": "Description that is translated to Ukarainian",
                    "example": "Сподіваюсь, вам сподобається"
                  }
                }
              },
              "wish": {
                "type": "object",
                "properties": {
                  "transEng": {
                    "type": "string",
                    "description": "Wish that is translated to English",
                    "example": "I would like to echange it on some cactus"
                  },
                  "transUa": {
                    "type": "string",
                    "description": "Wish that is translated to Ukarainian",
                    "example": "Я хотів обміняти це на якийсь кактус"
                  }
                }
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "Whether the advert is active",
            "example": true
          },
          "wish": {
            "type": "string",
            "description": "I would like to exhange it on some cactus",
            "example": "Peace lily"
          },
          "image": {
            "type": "object",
            "properties": {
              "small-250px": {
                "type": "string",
                "description": "URL for the small image size",
                "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728878869/leafofhopeAdverts/PlantPhoto_1_rvxaxr.jpg"
              },
              "medium-300px": {
                "type": "string",
                "description": "URL for the medium image size",
                "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728878869/leafofhopeAdverts/PlantPhoto_1_rvxaxr.jpg"
              },
              "large-500px": {
                "type": "string",
                "description": "URL for the large image size",
                "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728878963/leafofhopeAdverts/PlantPhoto_2_tsibgm.jpg"
              }
            }
          },
          "light": {
            "type": "string",
            "enum": [
              "light-loving",
              "relatively light-loving",
              "shade-tolerant"
            ],
            "description": "Light requirements",
            "example": "light-loving"
          },
          "care": {
            "type": "string",
            "enum": ["picky", "unassuming"],
            "description": "Level of care needed",
            "example": "unassuming"
          },
          "lifeDuration": {
            "type": "string",
            "enum": ["short-lived", "long-lived"],
            "description": "Plant's life duration",
            "example": "long-lived"
          },
          "temperature": {
            "type": "string",
            "enum": ["heat-loving", "cold-resisted"],
            "description": "Preferred temperature",
            "example": "heat-loving"
          },
          "height": {
            "type": "string",
            "enum": ["dwarf", "low", "average", "high", "very high"],
            "description": "Size of the plant",
            "example": "average"
          },
          "allergenicity": {
            "type": "string",
            "enum": ["available", "absent"],
            "description": "Whether the plant is allergenic",
            "example": "absent"
          },
          "watering": {
            "type": "string",
            "enum": [
              "three days",
              "week",
              "two weeks",
              "month"
            ],
            "description": "Watering frequency",
            "example": "week"
          },
          "toxicity": {
            "type": "string",
            "enum": ["very-poisonous", "highly-toxic", "toxic", "non-toxic"],
            "description": "Whether the plant is toxic",
            "example": "non-toxic"
          },
          "growthRate": {
            "type": "string",
            "enum": ["fast-growing", "medium-growing", "slow-growing"],
            "description": "Growth rate of the plant",
            "example": "medium-growing"
          },
          "windowDistance": {
            "type": "string",
            "enum": ["up to 0.5m", "up to 1m", "up to 2m", "over 2m"],
            "description": "Recommended distance from a window",
            "example": "up to 1m"
          },
          "substrate": {
            "type": "string",
            "enum": ["universal", "peat", "cactus", "orchids", "palm", "other"],
            "description": "Preferred substrate for the plant",
            "example": "universal"
          },
          "plantType": {
            "type": "string",
            "enum": ["flowering", "follage"],
            "description": "Type of plant",
            "example": "flowering"
          },
          "plantCondition": {
            "type": "string",
            "enum": ["conditioned", "unconditioned"],
            "description": "Condition of the plant",
            "example": "conditioned"
          },
          "keeper": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "Keeper's username",
                "example": "PlantLover123"
              },
              "email": {
                "type": "string",
                "description": "Keeper's email",
                "example": "plantlover@example.com"
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "small-250px": {
                    "type": "string",
                    "description": "URL for the small avatar size",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728879712/leafofhope/Photo_2_jxjjqh.jpg"
                  },
                  "medium-300px": {
                    "type": "string",
                    "description": "URL for the medium avatar size",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728879712/leafofhope/Photo_2_jxjjqh.jpg"
                  },
                  "large-500px": {
                    "type": "string",
                    "description": "URL for the large avatar size",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728879723/leafofhope/Photo_3_ri0xrn.jpg"
                  }
                }
              },
              "phone": {
                "type": "string",
                "description": "Keeper's phone number",
                "example": "+380123456789"
              },
              "adress": {
                "type": "string",
                "description": "Keeper's address",
                "example": "Kyiv, Ukraine"
              }
            }
          },
          "owner": {
            "type": "string",
            "description": "Owner's unique ID",
            "example": "64b7c7f9a19f4b2c5d8c1a9d"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the advert was created",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the advert was last updated",
            "example": "2023-01-02T00:00:00.000Z"
          }
        }
      },
      "EditAdvertRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Advert name",
            "minLength": 1,
            "maxLength": 28,
            "example": "Beautiful Monstera"
          },
          "description": {
            "type": "string",
            "description": "Advert description",
            "example": "Looking for a good home for this plant"
          },
          "way": {
            "type": "string",
            "enum": ["exchange", "give"],
            "description": "Way of giving the plant",
            "example": "exchange"
          },
          "lang": {
            "type": "string",
            "enum": ["en", "ua"],
            "description": "The default languege of plant characterictics",
            "example": "ua"
          },
          "wish": {
            "type": "string",
            "description": "Wish or expected exchange item",
            "example": "Peace lily"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Picture of the plant"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the advert is active",
            "example": true
          },
          "light": {
            "type": "string",
            "enum": [
              "light-loving",
              "relatively light-loving",
              "shade-tolerant"
            ],
            "description": "Light requirements",
            "example": "light-loving"
          },
          "care": {
            "type": "string",
            "enum": ["picky", "unassuming"],
            "description": "Level of care needed",
            "example": "unassuming"
          },
          "lifeDuration": {
            "type": "string",
            "enum": ["short-lived", "long-lived"],
            "description": "Plant's life duration",
            "example": "long-lived"
          },
          "temperature": {
            "type": "string",
            "enum": ["heat-loving", "cold-resisted"],
            "description": "Preferred temperature",
            "example": "heat-loving"
          },
          "height": {
            "type": "string",
            "enum": ["dwarf", "low", "average", "high", "very high"],
            "description": "Size of the plant",
            "example": "average"
          },
          "allergenicity": {
            "type": "string",
            "enum": ["available", "absent"],
            "description": "Whether the plant is allergenic",
            "example": "absent"
          },
          "watering": {
            "type": "string",
            "enum": [
              "three days",
              "week",
              "two weeks",
              "month"
            ],
            "description": "Watering frequency",
            "example": "week"
          },
          "toxicity": {
            "type": "string",
            "enum": ["very-poisonous", "highly-toxic", "toxic", "non-toxic"],
            "description": "Whether the plant is toxic",
            "example": "non-toxic"
          },
          "growthRate": {
            "type": "string",
            "enum": ["fast-growing", "medium-growing", "slow-growing"],
            "description": "Growth rate of the plant",
            "example": "medium-growing"
          },
          "windowDistance": {
            "type": "string",
            "enum": ["up to 0.5m", "up to 1m", "up to 2m", "over 2m"],
            "description": "Recommended distance from a window",
            "example": "up to 1m"
          },
          "substrate": {
            "type": "string",
            "enum": ["universal", "peat", "cactus", "orchids", "palm", "other"],
            "description": "Preferred substrate for the plant",
            "example": "universal"
          },
          "plantType": {
            "type": "string",
            "enum": ["flowering", "follage"],
            "description": "Type of plant",
            "example": "flowering"
          },
          "plantCondition": {
            "type": "string",
            "enum": ["conditioned", "unconditioned"],
            "description": "Condition of the plant",
            "example": "conditioned"
          }
        }
      },
      "DeleteAdvertResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Advert's deleted",
            "example": "delete success"
          },
          "advert": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the advert",
                "example": "64b7c7f9a19f4b2c5d8c1a9d"
              },
              "name": {
                "type": "string",
                "description": "Name of the advert",
                "example": "Beautiful Monstera"
              },
              "description": {
                "type": "string",
                "description": "Description of the advert",
                "example": "I hope you will like it"
              },
              "way": {
                "type": "string",
                "enum": ["exchange", "give"],
                "description": "Way of giving the plant",
                "example": "exchange"
              },
              "lang": {
                "type": "string",
                "enum": ["en", "ua"],
                "description": "The default languege of plant characterictics",
                "example": "ua"
              },
              "wish": {
                "type": "string",
                "description": "Wish or expected exchange item",
                "example": "I would like to exhange it on some cactus"
              },
              "translated": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "object",
                    "properties": {
                      "transEng": {
                        "type": "string",
                        "description": "Name that is translated to English",
                        "example": "Beautiful Monstera"
                      },
                      "transUa": {
                        "type": "string",
                        "description": "Name that is translated to Ukarainian",
                        "example": "Прекрасна Монстера"
                      }
                    }
                  },
                  "description": {
                    "type": "object",
                    "properties": {
                      "transEng": {
                        "type": "string",
                        "description": "Description that is translated to English",
                        "example": "I hope you will like it"
                      },
                      "transUa": {
                        "type": "string",
                        "description": "Description that is translated to Ukarainian",
                        "example": "Сподіваюсь, вам сподобається"
                      }
                    }
                  },
                  "wish": {
                    "type": "object",
                    "properties": {
                      "transEng": {
                        "type": "string",
                        "description": "Wish that is translated to English",
                        "example": "I would like to exhange it on some cactus"
                      },
                      "transUa": {
                        "type": "string",
                        "description": "Wish that is translated to Ukarainian",
                        "example": "Я хотів обміняти це на якийсь кактус"
                      }
                    }
                  }
                }
              },
              "active": {
                "type": "boolean",
                "description": "Whether the advert is active",
                "example": true
              },
              "image": {
                "type": "object",
                "properties": {
                  "small-250px": {
                    "type": "string",
                    "description": "URL for the small image size",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728878869/leafofhopeAdverts/PlantPhoto_1_rvxaxr.jpg"
                  },
                  "medium-300px": {
                    "type": "string",
                    "description": "URL for the medium image size",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728878869/leafofhopeAdverts/PlantPhoto_1_rvxaxr.jpg"
                  },
                  "large-500px": {
                    "type": "string",
                    "description": "URL for the large image size",
                    "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728878963/leafofhopeAdverts/PlantPhoto_2_tsibgm.jpg"
                  }
                }
              },
              "light": {
                "type": "string",
                "enum": [
                  "light-loving",
                  "relatively light-loving",
                  "shade-tolerant"
                ],
                "description": "Light requirements",
                "example": "light-loving"
              },
              "care": {
                "type": "string",
                "enum": ["picky", "unassuming"],
                "description": "Level of care needed",
                "example": "unassuming"
              },
              "lifeDuration": {
                "type": "string",
                "enum": ["short-lived", "long-lived"],
                "description": "Plant's life duration",
                "example": "long-lived"
              },
              "temperature": {
                "type": "string",
                "enum": ["heat-loving", "cold-resisted"],
                "description": "Preferred temperature",
                "example": "heat-loving"
              },
              "height": {
                "type": "string",
                "enum": ["dwarf", "low", "average", "high", "very high"],
                "description": "Size of the plant",
                "example": "average"
              },
              "allergenicity": {
                "type": "string",
                "enum": ["available", "absent"],
                "description": "Whether the plant is allergenic",
                "example": "absent"
              },
              "watering": {
                "type": "string",
                "enum": [
                  "three days",
                  "week",
                  "two weeks",
                  "month"
                ],
                "description": "Watering frequency",
                "example": "week"
              },
              "toxicity": {
                "type": "string",
                "enum": [
                  "very-poisonous",
                  "highly-toxic",
                  "toxic",
                  "non-toxic"
                ],
                "description": "Whether the plant is toxic",
                "example": "non-toxic"
              },
              "growthRate": {
                "type": "string",
                "enum": ["fast-growing", "medium-growing", "slow-growing"],
                "description": "Growth rate of the plant",
                "example": "medium-growing"
              },
              "windowDistance": {
                "type": "string",
                "enum": ["up to 0.5m", "up to 1m", "up to 2m", "over 2m"],
                "description": "Recommended distance from a window",
                "example": "up to 1m"
              },
              "substrate": {
                "type": "string",
                "enum": [
                  "universal",
                  "peat",
                  "cactus",
                  "orchids",
                  "palm",
                  "other"
                ],
                "description": "Preferred substrate for the plant",
                "example": "universal"
              },
              "plantType": {
                "type": "string",
                "enum": ["flowering", "follage"],
                "description": "Type of plant",
                "example": "flowering"
              },
              "plantCondition": {
                "type": "string",
                "enum": ["conditioned", "unconditioned"],
                "description": "Condition of the plant",
                "example": "conditioned"
              },
              "keeper": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Keeper's username",
                    "example": "PlantLover123"
                  },
                  "email": {
                    "type": "string",
                    "description": "Keeper's email",
                    "example": "plantlover@example.com"
                  },
                  "avatar": {
                    "type": "object",
                    "properties": {
                      "small-250px": {
                        "type": "string",
                        "description": "URL for the small avatar size",
                        "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728879712/leafofhope/Photo_2_jxjjqh.jpg"
                      },
                      "medium-300px": {
                        "type": "string",
                        "description": "URL for the medium avatar size",
                        "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728879712/leafofhope/Photo_2_jxjjqh.jpg"
                      },
                      "large-500px": {
                        "type": "string",
                        "description": "URL for the large avatar size",
                        "example": "https://res.cloudinary.com/dk3syrsg5/image/upload/v1728879723/leafofhope/Photo_3_ri0xrn.jpg"
                      }
                    }
                  },
                  "phone": {
                    "type": "string",
                    "description": "Keeper's phone number",
                    "example": "+380123456789"
                  },
                  "adress": {
                    "type": "string",
                    "description": "Keeper's address",
                    "example": "Kyiv, Ukraine"
                  }
                }
              },
              "owner": {
                "type": "string",
                "description": "Owner's unique ID",
                "example": "64b7c7f9a19f4b2c5d8c1a9d"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Date when the advert was created",
                "example": "2023-01-01T00:00:00.000Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Date when the advert was last updated",
                "example": "2023-01-02T00:00:00.000Z"
              }
            }
          }
        }
      },
      "FilteredAdvertsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddAdvertResponse"
            },
            "description": "Array of filtered adverts"
          },
          "tottal": {
            "type": "integer",
            "description": "Total number of matching adverts",
            "example": 25
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
